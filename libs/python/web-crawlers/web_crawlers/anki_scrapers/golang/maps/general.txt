maps.All(<i>m</i>) | <b>Maps function</b> that returns an iterator over key-value pairs from m. The iteration order is not specified and is not guaranteed to be the same from one call to the next.  |  | func All[Map ~map[K]V, K comparable, V any](m Map) iter.Seq2[K, V] 
maps.Clone(<i>m</i>) | <b>Maps function</b> that returns a copy of m.  This is a shallow clone: the new keys and values are set using ordinary assignment.  |  | func Clone[M ~map[K]V, K comparable, V any](m M) M 
maps.Collect(<i>seq</i>, <i>V]</i>) | <b>Maps function</b> that collects key-value pairs from seq into a new map and returns it.  |  | func Collect[K comparable, V any](seq iter.Seq2[K, V]) map[K]V 
maps.Copy(<i>dst</i>, <i>src</i>) | <b>Maps function</b> that copies all key/value pairs in src adding them to dst. When a key in src is already present in dst, the value in dst will be overwritten by the value associated with the key in src.  |  | func Copy[M1 ~map[K]V, M2 ~map[K]V, K comparable, V any](dst M1, src M2) 
maps.DeleteFunc(<i>m</i>, <i>del</i>, <i>V</i>) | <b>Maps function</b> that deletes any key/value pairs from m for which del returns true.  |  | func DeleteFunc[M ~map[K]V, K comparable, V any](m M, del func(K, V) bool) 
maps.Equal(<i>m1</i>, <i>m2</i>) | <b>Maps function</b> that reports whether two maps contain the same key/value pairs. Values are compared using ==.  |  | func Equal[M1, M2 ~map[K]V, K, V comparable](m1 M1, m2 M2) bool 
maps.EqualFunc(<i>m1</i>, <i>m2</i>, <i>eq</i>, <i>V2</i>) | <b>Maps function</b> that is like Equal, but compares values using eq. Keys are still compared with ==.  |  | func EqualFunc[M1 ~map[K]V1, M2 ~map[K]V2, K comparable, V1, V2 any](m1 M1, m2 M2, eq func(V1, V2) bool) bool 
maps.Insert(<i>m</i>, <i>seq</i>, <i>V]</i>) | <b>Maps function</b> that adds the key-value pairs from seq to m. If a key in seq already exists in m, its value will be overwritten.  |  | func Insert[Map ~map[K]V, K comparable, V any](m Map, seq iter.Seq2[K, V]) 
maps.Keys(<i>m</i>) | <b>Maps function</b> that returns an iterator over keys in m. The iteration order is not specified and is not guaranteed to be the same from one call to the next.  |  | func Keys[Map ~map[K]V, K comparable, V any](m Map) iter.Seq[K] 
maps.Values(<i>m</i>) | <b>Maps function</b> that returns an iterator over values in m. The iteration order is not specified and is not guaranteed to be the same from one call to the next.  |  | func Values[Map ~map[K]V, K comparable, V any](m Map) iter.Seq[V] 
