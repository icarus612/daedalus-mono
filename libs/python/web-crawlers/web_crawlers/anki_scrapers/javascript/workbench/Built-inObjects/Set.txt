<b>Set method</b>: new Set(<i>iterable</i>) | <b>Set method</b> that creates a new set. |  | new Set(<i>iterable</i>) | // Create a Set<br/> const letters = new Set(["a","b","c"]);<br/> |  
<b>Set method</b>: <i>set</i>.add(<i>value</i>) | <b>Set method</b> that adds a new element to the set. |  | <i>set</i>.add(<i>value</i>) | letters.add("d");<br/> letters.add("e"); |  
<b>Set method</b>: <i>set</i>.clear() | <b>Set method</b> that removes all elements from a set. |  | <i>set</i>.clear() | // Create a Set<br/> const letters = new Set(["a","b","c"]);<br/> <br/> // Clear Set<br/> letters.clear() |  
<b>Set method</b>: <i>set</i>.delete(<i>value</i>) | <b>Set method</b> that removes an element from a set. |  | <i>set</i>.delete(<i>value</i>) | // Create a Set<br/> const letters = new Set(["a","b","c"]);<br/> <br/> // Remove one Element<br/> letters.delete("a"); |  
<b>Set method</b>: <i>set</i>.entries() | <b>Set method</b> that returns an iterator with the [value,value] pairs from a set. |  | <i>set</i>.entries() | // Create a Set<br/> const letters = new Set(["a","b","c"]);<br/> <br/> // Get all Entries<br/> const myIterator = letters.entries();<br/> <br/> // List all Entries<br/> let text = "";<br/> for (const entry of myIterator) {<br/>   text += entry;<br/> }<br/> |  
<b>Set method</b>: <i>set</i>.forEach(<i>callback</i>) | <b>Set method</b> that invokes a callback for each element. |  | <i>set</i>.forEach(<i>callback</i>) | // Create a Set<br/> const letters = new Set(["a","b","c"]);<br/> <br/> // List all entries<br/> let text = "";<br/> letters.forEach (function(value) {<br/>   text += value;<br/> })<br/> |  
<b>Set method</b>: <i>set</i>.has(<i>value</i>) | <b>Set method</b> that returns true if a value exists. |  | <i>set</i>.has(<i>value</i>) | // Create a Set<br/> const letters = new Set(["a","b","c"]);<br/> <br/> // Does the Set contain "d"?<br/> answer = letters.has("d"); |  
<b>Set method</b>: <i>set</i>.keys() | <b>Set method</b> that same as values(). |  | <i>set</i>.keys() | // Create a Set<br/> const letters = new Set(["a","b","c"]);<br/> <br/> // Get the Values<br/> const myIterator = letters.keys();<br/> <br/> // List the Values<br/> let text = "";<br/> for (const x of myIterator) {<br/>   text += x;<br/> } |  
<b>Set method</b>: <i>set</i>.values() | <b>Set method</b> that returns an iterator with the values in a set. |  | <i>set</i>.values() | // Create a Set<br/> const letters = new Set(["a","b","c"]);<br/> <br/> // Get all Values<br/> const myIterator = letters.values();<br/> <br/> // List all Values<br/> let text = "";<br/> for (const entry of myIterator) {<br/>   text += entry;<br/> }<br/> |  
<b>Set property</b>: <i>set</i>.size | <b>Set property</b> that returns the number of elements in a set. |  | <i>set</i>.size | // Create a Set<br/> const letters = new Set(["a","b","c"]);<br/> <br/> // Get the Size<br/> let x = letters.size |  
