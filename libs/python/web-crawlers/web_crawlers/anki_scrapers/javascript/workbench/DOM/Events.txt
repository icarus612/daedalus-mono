<b>Events event</b>: &lt;<i>element</i> onabort="<i>myScript</i>"&gt; | <b>Events event</b> that the loading of a media is aborted. |  | &lt;<i>element</i> onabort="<i>myScript</i>"&gt; | &lt;video onabort="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onafterprint="<i>myScript</i>"&gt; | <b>Events event</b> that a page has started printing. |  | &lt;<i>element</i> onafterprint="<i>myScript</i>"&gt; | &lt;body onafterprint="myFunction()"&gt; |  
<b>Events event</b>: animationend | <b>Events event</b> that a css animation has completed. |  |  | const div1 = document.getElementById("myDIV");<br/><br/> div1.addEventListener("animationend", myEndFunction); |  
<b>Events event</b>: animationiteration | <b>Events event</b> that a css animation is repeated. |  |  | const div1 = document.getElementById("myDIV");<br/><br/> div1.addEventListener("animationiteration", myRepeatFunction); |  
<b>Events event</b>: animationstart | <b>Events event</b> that a css animation has started. |  |  | const div1 = document.getElementById("myDIV");<br/><br/> div1.addEventListener("animationstart", myStartFunction); |  
<b>Events event</b>: &lt;<i>element</i> onbeforeprint="<i>myScript</i>"&gt; | <b>Events event</b> that a page is about to be printed. |  | &lt;<i>element</i> onbeforeprint="<i>myScript</i>"&gt; | &lt;body onbeforeprint="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onbeforeunload="<i>myScript</i>"&gt; | <b>Events event</b> that before a document is about to be unloaded. |  | &lt;<i>element</i> onbeforeunload="<i>myScript</i>"&gt; | &lt;body onbeforeunload="return myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onblur="<i>myScript</i>"&gt; | <b>Events event</b> that an element loses focus. |  | &lt;<i>element</i> onblur="<i>myScript</i>"&gt; | &lt;input type="text" onblur="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> oncanplay="<i>myScript</i>"&gt; | <b>Events event</b> that the browser can start playing a media (has buffered enough to begin). |  | &lt;<i>element</i> oncanplay="<i>myScript</i>"&gt; | &lt;video oncanplay="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> oncanplaythrough="<i>myScript</i>"&gt; | <b>Events event</b> that the browser can play through a media without stopping for buffering. |  | &lt;<i>element</i> oncanplaythrough="<i>myScript</i>"&gt; | &lt;video oncanplaythrough="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onchange="<i>myScript</i>"&gt; | <b>Events event</b> that the content of a form element has changed. |  | &lt;<i>element</i> onchange="<i>myScript</i>"&gt; | &lt;select onchange="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onclick="<i>myScript</i>"&gt; | <b>Events event</b> that an element is clicked on. |  | &lt;<i>element</i> onclick="<i>myScript</i>"&gt; | &lt;button onclick="myFunction()"&gt;Click me&lt;/button&gt; |  
<b>Events event</b>: &lt;<i>element</i> oncontextmenu="<i>myScript</i>"&gt; | <b>Events event</b> that an element is right-clicked to open a context menu. |  | &lt;<i>element</i> oncontextmenu="<i>myScript</i>"&gt; | div.addEventListener("contextmenu", (e) =&gt; {e.preventDefault()}); |  
<b>Events event</b>: &lt;<i>element</i> oncopy="<i>myScript</i>"&gt; | <b>Events event</b> that the content of an element is copied. |  | &lt;<i>element</i> oncopy="<i>myScript</i>"&gt; | &lt;input type="text" oncopy="myFunction()" value="Try to copy me"&gt; |  
<b>Events event</b>: &lt;<i>element</i> oncut="<i>myScript</i>"&gt; | <b>Events event</b> that the content of an element is cut. |  | &lt;<i>element</i> oncut="<i>myScript</i>"&gt; | &lt;input type="text" oncut="myFunction()" value="Try to cut this text"&gt; |  
<b>Events event</b>: &lt;<i>element</i> ondblclick="<i>myScript</i>"&gt; | <b>Events event</b> that an element is double-clicked. |  | &lt;<i>element</i> ondblclick="<i>myScript</i>"&gt; | &lt;p ondblclick="myFunction()"&gt;Double-click me&lt;/p&gt; |  
<b>Events event</b>: &lt;<i>element</i> ondrag="<i>myScript</i>"&gt; | <b>Events event</b> that an element is being dragged. |  | &lt;<i>element</i> ondrag="<i>myScript</i>"&gt; | &lt;p draggable="true" ondrag="myFunction(event)"&gt;Drag me!&lt;/p&gt; |  
<b>Events event</b>: &lt;<i>element</i> ondragend="<i>myScript</i>"&gt; | <b>Events event</b> that dragging of an element has ended. |  | &lt;<i>element</i> ondragend="<i>myScript</i>"&gt; | &lt;p draggable="true" ondragend="myFunction(event)"&gt;Drag me!&lt;/p&gt; |  
<b>Events event</b>: &lt;<i>element</i> ondragenter="<i>myScript</i>"&gt; | <b>Events event</b> that a dragged element enters the drop target. |  | &lt;<i>element</i> ondragenter="<i>myScript</i>"&gt; | &lt;div ondragenter="myFunction(event)"&gt;&lt;/div&gt; |  
<b>Events event</b>: &lt;<i>element</i> ondragleave="<i>myScript</i>"&gt; | <b>Events event</b> that a dragged element leaves the drop target. |  | &lt;<i>element</i> ondragleave="<i>myScript</i>"&gt; | &lt;div ondragleave="myFunction(event)"&gt;&lt;/div&gt; |  
<b>Events event</b>: &lt;<i>element</i> ondragover="<i>myScript</i>"&gt; | <b>Events event</b> that a dragged element is over the drop target. |  | &lt;<i>element</i> ondragover="<i>myScript</i>"&gt; | &lt;div ondragover="myFunction(event)"&gt;&lt;/div&gt; |  
<b>Events event</b>: &lt;<i>element</i> ondragstart="<i>myScript</i>"&gt; | <b>Events event</b> that dragging of an element has started. |  | &lt;<i>element</i> ondragstart="<i>myScript</i>"&gt; | &lt;p draggable="true" ondragstart="myFunction(event)"&gt;Drag me!&lt;/p&gt; |  
<b>Events event</b>: &lt;<i>element</i> ondrop="<i>myScript</i>"&gt; | <b>Events event</b> that a dragged element is dropped on the target. |  | &lt;<i>element</i> ondrop="<i>myScript</i>"&gt; | &lt;div ondrop="myFunction(event)"&gt;&lt;/div&gt; |  
<b>Events event</b>: &lt;<i>element</i> ondurationchange="<i>myScript</i>"&gt; | <b>Events event</b> that the duration of a media is changed. |  | &lt;<i>element</i> ondurationchange="<i>myScript</i>"&gt; | &lt;video ondurationchange="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onended="<i>myScript</i>"&gt; | <b>Events event</b> that a media has reach the end ("thanks for listening"). |  | &lt;<i>element</i> onended="<i>myScript</i>"&gt; | &lt;audio onended="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onerror="<i>myScript</i>"&gt; | <b>Events event</b> that an error has occurred while loading a file . |  | &lt;<i>element</i> onerror="<i>myScript</i>"&gt; | &lt;img src="image.gif" onerror="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onfocus="<i>myScript</i>"&gt; | <b>Events event</b> that an element gets focus. |  | &lt;<i>element</i> onfocus="<i>myScript</i>"&gt; | &lt;input type="text"  onfocus="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onfocusin="<i>myScript</i>"&gt; | <b>Events event</b> that an element is about to get focus. |  | &lt;<i>element</i> onfocusin="<i>myScript</i>"&gt; | &lt;input type="text"  onfocusin="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onfocusout="<i>myScript</i>"&gt; | <b>Events event</b> that an element is about to lose focus. |  | &lt;<i>element</i> onfocusout="<i>myScript</i>"&gt; | &lt;input type="text"  onfocusout="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onfullscreenchange="<i>myScript</i>"&gt; | <b>Events event</b> that an element is displayed in fullscreen mode. |  | &lt;<i>element</i> onfullscreenchange="<i>myScript</i>"&gt; | document.addEventListener("fullscreenchange", function() {<br/>     output.innerHTML = "fullscreenchange event fired!";<br/>}); |  
<b>Events event</b>: &lt;<i>element</i> onfullscreenerror="<i>myScript</i>"&gt; | <b>Events event</b> that an element can not be displayed in fullscreen mode. |  | &lt;<i>element</i> onfullscreenerror="<i>myScript</i>"&gt; | document.addEventListener("fullscreenerror", function() {<br/>     alert("Fullscreen denied")<br/>}); |  
<b>Events event</b>: &lt;<i>element</i> onhashchange="<i>myScript</i>"&gt; | <b>Events event</b> that there has been changes to the anchor part of a url. |  | &lt;<i>element</i> onhashchange="<i>myScript</i>"&gt; | &lt;body onhashchange="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> oninput="<i>myScript</i>"&gt; | <b>Events event</b> that an element gets user input. |  | &lt;<i>element</i> oninput="<i>myScript</i>"&gt; | &lt;input type="text" oninput="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> oninvalid="<i>myScript</i>"&gt; | <b>Events event</b> that an element is invalid. |  | &lt;<i>element</i> oninvalid="<i>myScript</i>"&gt; | &lt;input type="text" oninvalid="alert('You must fill out the form!');" required&gt; |  
<b>Events event</b>: &lt;<i>element</i> onkeydown="<i>myScript</i>"&gt; | <b>Events event</b> that a key is down. |  | &lt;<i>element</i> onkeydown="<i>myScript</i>"&gt; | &lt;input type="text" onkeydown="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onkeypress="<i>myScript</i>"&gt; | <b>Events event</b> that a key is pressed. |  | &lt;<i>element</i> onkeypress="<i>myScript</i>"&gt; | &lt;input type="text" onkeypress="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onkeyup="<i>myScript</i>"&gt; | <b>Events event</b> that a key is released. |  | &lt;<i>element</i> onkeyup="<i>myScript</i>"&gt; | &lt;input type="text" onkeyup="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onload="<i>myScript</i>"&gt; | <b>Events event</b> that an object has loaded. |  | &lt;<i>element</i> onload="<i>myScript</i>"&gt; | &lt;body onload="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onloadeddata="<i>myScript</i>"&gt; | <b>Events event</b> that media data is loaded. |  | &lt;<i>element</i> onloadeddata="<i>myScript</i>"&gt; | &lt;video onloadeddata="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onloadedmetadata="<i>myScript</i>"&gt; | <b>Events event</b> that meta data (like dimensions and duration) are loaded. |  | &lt;<i>element</i> onloadedmetadata="<i>myScript</i>"&gt; | &lt;video onloadedmetadata="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onloadstart="<i>myScript</i>"&gt; | <b>Events event</b> that the browser starts looking for the specified media. |  | &lt;<i>element</i> onloadstart="<i>myScript</i>"&gt; | &lt;video onloadstart="myFunction()"&gt; |  
<b>Events event</b>: <em>object</em>.onmessage = function(){<i>myScript</i>}; | <b>Events event</b> that a message is received through the event source. |  | <em>object</em>.onmessage = function(){<i>myScript</i>}; | var source = new EventSource("demo_sse.php");<br/>source.onmessage = function(event) {<br/>  document.getElementById("myDIV").innerHTML += event.data + "&lt;br&gt;";<br/>}; |  
<b>Events event</b>: &lt;<i>element</i> onmousedown="<i>myScript</i>"&gt; | <b>Events event</b> that the mouse button is pressed over an element. |  | &lt;<i>element</i> onmousedown="<i>myScript</i>"&gt; | &lt;p onmousedown="myFunction()"&gt;Click the text!&lt;/p&gt; |  
<b>Events event</b>: &lt;<i>element</i> onmouseenter="<i>myScript</i>"&gt; | <b>Events event</b> that the pointer is moved onto an element. |  | &lt;<i>element</i> onmouseenter="<i>myScript</i>"&gt; | &lt;img onmouseenter="bigImg(this)" src="smiley.gif" alt="Smiley"&gt; |  
<b>Events event</b>: &lt;<i>element</i>  onmouseleave="<i>myScript</i>"&gt; | <b>Events event</b> that the pointer is moved out of an element. |  | &lt;<i>element</i>  onmouseleave="<i>myScript</i>"&gt; | &lt;img onmouseleave="normalImg(this)" src="smiley.gif" alt="Smiley"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onmousemove="<i>myScript</i>"&gt; | <b>Events event</b> that the pointer is moved over an element. |  | &lt;<i>element</i> onmousemove="<i>myScript</i>"&gt; | &lt;div onmousemove="myFunction()"&gt;Move the cursor over me&lt;/div&gt; |  
<b>Events event</b>: &lt;<i>element</i> onmouseover="<i>myScript</i>"&gt; | <b>Events event</b> that the pointer is moved onto an element. |  | &lt;<i>element</i> onmouseover="<i>myScript</i>"&gt; | &lt;img onmouseover="bigImg(this)" src="smiley.gif" alt="Smiley"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onmouseout="<i>myScript</i>"&gt; | <b>Events event</b> that the pointer is moved out of an element. |  | &lt;<i>element</i> onmouseout="<i>myScript</i>"&gt; | &lt;img onmouseout="normalImg(this)" src="smiley.gif" alt="Smiley"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onmouseup="<i>myScript</i>"&gt; | <b>Events event</b> that a user releases a mouse button over an element. |  | &lt;<i>element</i> onmouseup="<i>myScript</i>"&gt; | &lt;p onmouseup="mouseUp()"&gt;Click the text!&lt;/p&gt; |  
<b>Events event</b>: &lt;<i>element</i> onwheel="<i>myScript</i>"&gt; | <b>Events event</b> that deprecated. use the    wheel event instead. |  | &lt;<i>element</i> onwheel="<i>myScript</i>"&gt; | document.getElementById("myDIV").addEventListener("wheel", myFunction);<br/> <br/>function myFunction() {<br/>  this.style.fontSize = "35px";<br/>} |  
<b>Events event</b>: &lt;<i>element</i> onoffline="<i>myScript</i>"&gt; | <b>Events event</b> that the browser starts working offline. |  | &lt;<i>element</i> onoffline="<i>myScript</i>"&gt; | &lt;body onoffline="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> ononline="<i>myScript</i>"&gt; | <b>Events event</b> that the browser starts working online. |  | &lt;<i>element</i> ononline="<i>myScript</i>"&gt; | &lt;body ononline="myFunction()"&gt; |  
<b>Events event</b>: <em>object</em>.onopen = function(){<i>myScript</i>}; | <b>Events event</b> that a connection with the event source is opened. |  | <em>object</em>.onopen = function(){<i>myScript</i>}; | var source = new EventSource("demo_sse.php");<br/>source.onopen = function() {<br/>  document.getElementById("myH1").innerHTML = "Getting server updates";<br/>}; |  
<b>Events event</b>: &lt;<i>element</i> onpagehide="<i>myScript</i>"&gt; | <b>Events event</b> that user navigates away from a webpage. |  | &lt;<i>element</i> onpagehide="<i>myScript</i>"&gt; | &lt;body onpagehide="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onpageshow="<i>myScript</i>"&gt; | <b>Events event</b> that user navigates to a webpage. |  | &lt;<i>element</i> onpageshow="<i>myScript</i>"&gt; | &lt;body onpageshow="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onpaste="<i>myScript</i>"&gt; | <b>Events event</b> that some content is pasted in an element. |  | &lt;<i>element</i> onpaste="<i>myScript</i>"&gt; | &lt;input type="text" onpaste="myFunction()" value="Paste something here"&gt; |  
<b>Events event</b>: &lt;<i>element</i>  onpause="<i>myScript</i>"&gt; | <b>Events event</b> that a media is paused. |  | &lt;<i>element</i>  onpause="<i>myScript</i>"&gt; | &lt;video onpause="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onplay="<i>myScript</i>"&gt; | <b>Events event</b> that the media has started or is no longer paused. |  | &lt;<i>element</i> onplay="<i>myScript</i>"&gt; | &lt;video onplay="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i>  onplaying="<i>myScript</i>"&gt; | <b>Events event</b> that the media is playing after being paused or buffered. |  | &lt;<i>element</i>  onplaying="<i>myScript</i>"&gt; | &lt;video onplaying="myFunction()"&gt; |  
<b>Events event</b>: popstate | <b>Events event</b> that the window's history changes. |  |  |  |  
<b>Events event</b>: &lt;<i>element</i> onprogress="<i>myScript</i>"&gt; | <b>Events event</b> that the browser is downloading media data. |  | &lt;<i>element</i> onprogress="<i>myScript</i>"&gt; | &lt;video onprogress="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onratechange="<i>myScript</i>"&gt; | <b>Events event</b> that the playing speed of a media is changed. |  | &lt;<i>element</i> onratechange="<i>myScript</i>"&gt; | &lt;video onratechange="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onresize="<i>myScript</i>"&gt; | <b>Events event</b> that the document view is resized. |  | &lt;<i>element</i> onresize="<i>myScript</i>"&gt; | &lt;body onresize="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onreset="<i>myScript</i>"&gt; | <b>Events event</b> that a form is reset. |  | &lt;<i>element</i> onreset="<i>myScript</i>"&gt; | &lt;form onreset="myFunction()"&gt;<br/>  Enter name: &lt;input type="text"&gt;<br/>  &lt;input type="reset"&gt;<br/>&lt;/form&gt; |  
<b>Events event</b>: &lt;<i>element</i> onscroll="<i>myScript</i>"&gt; | <b>Events event</b> that an scrollbar is being scrolled. |  | &lt;<i>element</i> onscroll="<i>myScript</i>"&gt; | &lt;div onscroll="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onsearch="<i>myScript</i>"&gt; | <b>Events event</b> that something is written in a search field. |  | &lt;<i>element</i> onsearch="<i>myScript</i>"&gt; | &lt;input type="search" onsearch="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onseeked="<i>myScript</i>"&gt; | <b>Events event</b> that skipping to a media position is finished. |  | &lt;<i>element</i> onseeked="<i>myScript</i>"&gt; | &lt;video onseeked="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onseeking="<i>myScript</i>"&gt; | <b>Events event</b> that skipping to a media position is started. |  | &lt;<i>element</i> onseeking="<i>myScript</i>"&gt; | &lt;video onseeking="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onselect="<i>myScript</i>"&gt; | <b>Events event</b> that user selects some text. |  | &lt;<i>element</i> onselect="<i>myScript</i>"&gt; | &lt;input type="text" onselect="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onshow="<i>myScript</i>"&gt; | <b>Events event</b> that a <menu> element is shown as a context menu. |  | &lt;<i>element</i> onshow="<i>myScript</i>"&gt; | &lt;div contextmenu="mymenu"&gt;<br/>  &lt;p&gt;Right-click inside this box to see the context menu!<br/>  &lt;menu type="context" id="mymenu" onshow="myFunction()"&gt;<br/>    &lt;menuitem label="Refresh" onclick="window.location.reload();"&gt;&lt;/menuitem&gt;<br/>  &lt;/menu&gt;<br/>&lt;/div&gt; |  
<b>Events event</b>: &lt;<i>element</i> onstalled="<i>myScript</i>"&gt; | <b>Events event</b> that the browser is trying to get unavailable media data. |  | &lt;<i>element</i> onstalled="<i>myScript</i>"&gt; | &lt;video onstalled="myFunction()"&gt; |  
<b>Events event</b>: storage | <b>Events event</b> that a web storage area is updated. |  |  |  |  
<b>Events event</b>: &lt;<i>element</i> onsubmit="<i>myScript</i>"&gt; | <b>Events event</b> that a form is submitted. |  | &lt;<i>element</i> onsubmit="<i>myScript</i>"&gt; | &lt;form onsubmit="myFunction()"&gt;<br/>  Enter name: &lt;input type="text"&gt;<br/>  &lt;input type="submit"&gt;<br/>&lt;/form&gt; |  
<b>Events event</b>: &lt;<i>element</i> onsuspend="<i>myScript</i>"&gt; | <b>Events event</b> that the browser is intentionally not getting media data. |  | &lt;<i>element</i> onsuspend="<i>myScript</i>"&gt; | &lt;video onsuspend="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> ontimeupdate="<i>myScript</i>"&gt; | <b>Events event</b> that the playing position has changed (the user  moves to a different point in the media). |  | &lt;<i>element</i> ontimeupdate="<i>myScript</i>"&gt; | &lt;video ontimeupdate="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> ontoggle="<i>myScript</i>"&gt; | <b>Events event</b> that the user opens or closes the <details> element. |  | &lt;<i>element</i> ontoggle="<i>myScript</i>"&gt; | &lt;details ontoggle="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> ontouchcancel="<i>myScript</i>"&gt; | <b>Events event</b> that the touch is interrupted. |  | &lt;<i>element</i> ontouchcancel="<i>myScript</i>"&gt; | &lt;p ontouchcancel="myFunction(event)"&gt;Touch me!&lt;/p&gt; |  
<b>Events event</b>: &lt;<i>element</i> ontouchend="<i>myScript</i>"&gt; | <b>Events event</b> that a finger is removed from a touch screen. |  | &lt;<i>element</i> ontouchend="<i>myScript</i>"&gt; | &lt;p ontouchend="myFunction(event)"&gt;Touch me!&lt;/p&gt; |  
<b>Events event</b>: &lt;<i>element</i> ontouchmove="<i>myScript</i>"&gt; | <b>Events event</b> that a finger is dragged across the screen. |  | &lt;<i>element</i> ontouchmove="<i>myScript</i>"&gt; | &lt;p ontouchmove="myFunction(event)"&gt;Touch me!&lt;/p&gt; |  
<b>Events event</b>: &lt;<i>element</i> ontouchstart="<i>myScript</i>"&gt; | <b>Events event</b> that a finger is placed on a touch screen. |  | &lt;<i>element</i> ontouchstart="<i>myScript</i>"&gt; | &lt;p ontouchstart="myFunction(event)"&gt;Touch me!&lt;/p&gt; |  
<b>Events event</b>: object.addEventListener("webkitTransitionEnd", <em>myScript</em>);  // Code for Safari 3.1 to 6.0<em><br/>object</em>.addEventListener("transitionend", <em>myScript</em>);        // Standard syntax<br/> | <b>Events event</b> that a css transition has completed. |  | object.addEventListener("webkitTransitionEnd", <em>myScript</em>);  // Code for Safari 3.1 to 6.0<em><br/>object</em>.addEventListener("transitionend", <em>myScript</em>);        // Standard syntax<br/> | // Code for Safari 3.1 to 6.0<br/>  document.getElementById("myDIV").addEventListener("webkitTransitionEnd", myFunction);<br/><br/>// Standard syntax<br/>  document.getElementById("myDIV").addEventListener("transitionend", myFunction); |  
<b>Events event</b>: &lt;<i>element</i> onunload="<i>myScript</i>"&gt; | <b>Events event</b> that a page has unloaded. |  | &lt;<i>element</i> onunload="<i>myScript</i>"&gt; | &lt;body onunload="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onvolumechange="<i>myScript</i>"&gt; | <b>Events event</b> that the volume of a media is changed (includes muting). |  | &lt;<i>element</i> onvolumechange="<i>myScript</i>"&gt; | &lt;video onvolumechange="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onwaiting="<i>myScript</i>"&gt; | <b>Events event</b> that a media is paused but is expected to resume (e.g. buffering). |  | &lt;<i>element</i> onwaiting="<i>myScript</i>"&gt; | &lt;video onwaiting="myFunction()"&gt; |  
<b>Events event</b>: &lt;<i>element</i> onwheel="<i>myScript</i>"&gt; | <b>Events event</b> that the mouse wheel rolls up or down over an element. |  | &lt;<i>element</i> onwheel="<i>myScript</i>"&gt; | document.getElementById("myDIV").addEventListener("wheel", myFunction);<br/> <br/>function myFunction() {<br/>  this.style.fontSize = "35px";<br/>} |  
